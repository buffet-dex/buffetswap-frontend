import React from 'react'
import { Text, TextProps } from '@buffet-dex/uikit'
import styled from 'styled-components'

export interface PercentProps extends TextProps {
  value: number | undefined
}
const PrecentText = styled(Text)`
  display: flex;
  align-items: center;
  p {
    padding-left: 8px;
  }
`

const Percent: React.FC<PercentProps> = ({ value, ...rest }) => {
  if (!value || Number.isNaN(value)) {
    return <Text {...rest}>-</Text>
  }

  const isNegative = value < 0

  return (
    <PrecentText {...rest} color={isNegative ? 'warning' : 'success'}>
      {isNegative ? (
        <svg width="14" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M1.29079 6.7101L6.29079 11.7101C6.38589 11.8011 6.49804 11.8725 6.62079 11.9201C6.86425 12.0201 7.13733 12.0201 7.38079 11.9201C7.50354 11.8725 7.61569 11.8011 7.71079 11.7101L12.7108 6.7101C12.804 6.61686 12.878 6.50617 12.9285 6.38435C12.9789 6.26253 13.0049 6.13196 13.0049 6.0001C13.0049 5.7338 12.8991 5.47841 12.7108 5.2901C12.5225 5.1018 12.2671 4.99601 12.0008 4.99601C11.7345 4.99601 11.4791 5.1018 11.2908 5.2901L8.00079 8.5901L8.00079 1.0001C8.00079 0.734886 7.89543 0.480531 7.7079 0.292995C7.52036 0.105458 7.26601 0.000102495 7.00079 0.000102472C6.73557 0.000102449 6.48122 0.105458 6.29368 0.292995C6.10615 0.480531 6.00079 0.734886 6.00079 1.0001L6.00079 8.5901L2.71079 5.2901C2.61783 5.19637 2.50723 5.12198 2.38537 5.07121C2.26351 5.02044 2.1328 4.9943 2.00079 4.9943C1.86878 4.9943 1.73807 5.02044 1.61621 5.07121C1.49435 5.12198 1.38375 5.19637 1.29079 5.2901C1.19706 5.38306 1.12267 5.49367 1.0719 5.61552C1.02113 5.73738 0.994992 5.86809 0.994992 6.0001C0.994992 6.13211 1.02113 6.26282 1.0719 6.38468C1.12267 6.50654 1.19706 6.61714 1.29079 6.7101Z"
            fill="#EB4D4D"
          />
        </svg>
      ) : (
        <svg width="14" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M12.7092 5.2899L7.70921 0.289896C7.61411 0.198856 7.50196 0.127491 7.37921 0.0798963C7.13575 -0.0201217 6.86267 -0.0201217 6.61921 0.0798963C6.49646 0.127491 6.38431 0.198856 6.28921 0.289896L1.28921 5.2899C1.19597 5.38314 1.12201 5.49383 1.07155 5.61565C1.02109 5.73747 0.995117 5.86804 0.995117 5.9999C0.995117 6.2662 1.10091 6.52159 1.28921 6.7099C1.47751 6.8982 1.73291 7.00399 1.99921 7.00399C2.26551 7.00399 2.52091 6.8982 2.70921 6.7099L5.99921 3.4099L5.99921 10.9999C5.99921 11.2651 6.10457 11.5195 6.2921 11.707C6.47964 11.8945 6.73399 11.9999 6.99921 11.9999C7.26443 11.9999 7.51878 11.8945 7.70632 11.707C7.89385 11.5195 7.99921 11.2651 7.99921 10.9999L7.99921 3.4099L11.2892 6.7099C11.3822 6.80363 11.4928 6.87802 11.6146 6.92879C11.7365 6.97956 11.8672 7.0057 11.9992 7.0057C12.1312 7.0057 12.2619 6.97956 12.3838 6.92879C12.5056 6.87802 12.6162 6.80363 12.7092 6.7099C12.8029 6.61693 12.8773 6.50633 12.9281 6.38447C12.9789 6.26261 13.005 6.13191 13.005 5.9999C13.005 5.86789 12.9789 5.73718 12.9281 5.61532C12.8773 5.49346 12.8029 5.38286 12.7092 5.2899Z"
            fill="#1FAD7A"
          />
        </svg>
      )}
      <p>{Math.abs(value).toFixed(2)}%</p>
    </PrecentText>
  )
}

export default Percent
